c
File.read file.path
file.path
c
expected_output
c
file.read
file.path
file
file = @generator.generate_trailer(file, total_clients, quantity_registries)
@generator.generate_trailer(file, total_clients, quantity_registries)
 File.read(@generator.generate_trailer(file, total_clients, quantity_registries).path)
 File.read(@generator.generate_trailer(file, total_clients, quantity_registries).path
c
f = @generator.generate_trailer(file, total_clients, quantity_registries)
expected_output
c
File.read file.path
n
File.read file.path
n
File.read file.pathn
c
text.ljust(8, " ")[0..8]
c
text.to_s[0..8]
text.to_s.methods
text.methods
text.truncate_to(8)
text
text.truncate(8)
text
c
'123123123123'.truncate(8)
File.read file.path
file
n
c
file.close
File.read file.path
 generate_trailer(file, @clients.length, 99)
c
generate_trailer(file, @clients.length, 99)
c
generate_trailer(@clients.length, 99)
File.read file.path
c
File.read file.path
c
File.read file.path
assert File.exist?(file.path)
c
file.open
file
file.rewind
file.rewired
File.exist? @output_file
file
c
File.exist? @output_file
@output_file
File.open(@output_file)
file
c
n
!validate_numeric(total_clients) || !validate_numeric(quantity_registries)
c
validate_numeric(total_clients.to_s) 
total_clients 
validate_numeric(total_clients) 
continue
generate_trailer(@clients.length, 99)
c
@clients.length
generate_trailer(@clients, 99)
c
generate_detail(file, client)
c
generate_detail(file, client)
 generate_header(file, client)
c
 code.to_s.length != 1 || !validate_numeric(code)
c
code.to_s.length
code.to_s
code.to_s != 1
code.to_s != 1 || !validate_numeric(code)
c
e
n
!validate_numeric(date)
c
validate_numeric(date)
c
validate_numeric(date)
Integer(date)
Integer(date.to_s)
Integer(date)
is_integer?(date)
date
is_integer?(date)
Integer(date.to_i)
!Integer('002222').nil?
Integer('002222')
!Integer('002222').nil?
Integer('002222')
Integer('00ee1')
Integer('00')
Integer('00)
Integer('00ii1')
Integer('00ii1'.to_i)
'000ff'
Integer(date.to_i)
!Integer(date.to_i)
!Integer(date.to_s)
!Integer(date)
date.to_i
date
 is_integer?(date) 
 !is_integer?(date) 
 date.length != 8
 != 8
 date.length
 !is_integer?(date) || date
 date.length != 8
 date.length == 8
 date.length != 8
 date.length
 date.length != 8
!is_integer?(date) || date.length != 8
!is_integer?(date)
date.length
date
c
client.acount
c
client.dv_relationship_agency
client.relationship_agency
client.sequence_number
c
client.relationship_agency
client.sequence_number
c
client
client.sequence_number
client
c
e
n
c
e
n
c
e
n
client.mci_client_code
n
@client.mci_client_code
@client
client
client.mci_client_code
c
@client
exit
c
self
self.attributes
self
n
options
self.person_type
self
c
e
n
c
 @generator.generate_file
@generator.add_client(@client)
c
 @generator.generate_file
@generator.add_client(@client)
@client
c
value
c
(value != 14 && value != 11)
value
c
value
!is_integer?(value) 
!is_integer?(value) || (value != 14 && value != 11)
c
n
c
n
!is_integer?(value) || (value != 14 && value != 11)
(value != 14 && value != 11)
value.length
is_integer?(value)
value
c
!!Integer('valu123e')
Integer('valu123e')
Integer('value')
Integer(value)
!!Integer(value)
!is_integer?(value)
is_integer?(value)
value.length
value
c
@generator.cpf_cnpj('123456789012345')
c
n
m.methods
n
c
n
 MCIF460Generator.person_type(type)
n
m = MCIF460Generator.new('./')
m
m = MCIF460Generator.new('./')
MCIF460Generator.new('./')
MCIF460Generator.new
MCIF460Generator.methods
MCIF460Generator
c
('A'..'P').to_a + (1..9).to_a.map(&:to_s)
